#ifndef HYDROGEN_TEXTURE_H
#define HYDROGEN_TEXTURE_H

#include "Handle.h"
#include "Loader.h"

namespace Hydrogen {

	//TODO: Update to samplers if that helps
	enum HydrogenTextureInternalFormat {
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_R_8 = GL_R8,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_RG_8 = GL_RG8,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_RGB_8 = GL_RGB8,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_RGBA_8 = GL_RGBA8,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_R_16F = GL_R16F,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_RG_16F = GL_RG16F,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_RGB_16F = GL_RGB16F,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_RGBA_16F = GL_RGBA16F,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_R_32F = GL_R32F,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_RG_32F = GL_RG32F,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_RGB_32F = GL_RGB32F,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_RGBA_32F = GL_RGBA32F,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_DEPTH_16 = GL_DEPTH_COMPONENT16,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_DEPTH_32 = GL_DEPTH_COMPONENT32,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_DEPTH_16F = GL_DEPTH_COMPONENT,
		HYDROGEN_TEXTURE_INTERNAL_FORMAT_DEPTH_32F = GL_DEPTH_COMPONENT32F,
	};
	enum HydrogenTexturePixelFormat {
		HYDROGEN_TEXTURE_PIXEL_FORMAT_R_UNSIGNED_BYTE,
		HYDROGEN_TEXTURE_PIXEL_FORMAT_RG_UNSIGNED_BYTE,
		HYDROGEN_TEXTURE_PIXEL_FORMAT_RGB_UNSIGNED_BYTE,
		HYDROGEN_TEXTURE_PIXEL_FORMAT_RGBA_UNSIGNED_BYTE,
		HYDROGEN_TEXTURE_PIXEL_FORMAT_R_FLOAT,
		HYDROGEN_TEXTURE_PIXEL_FORMAT_RG_FLOAT,
		HYDROGEN_TEXTURE_PIXEL_FORMAT_RGB_FLOAT,
		HYDROGEN_TEXTURE_PIXEL_FORMAT_RGBA_FLOAT,
	};

	enum HydrogenTextureFilteringMode {
		HYDROGEN_TEXTURE_FILTERING_MODE_NEAREST = GL_NEAREST,
		HYDROGEN_TEXTURE_FILTERING_MODE_LINEAR = GL_LINEAR,
		HYDROGEN_TEXTURE_FILTERING_MODE_NEAREST_MIPMAP_NEAREST = GL_NEAREST_MIPMAP_NEAREST,
		HYDROGEN_TEXTURE_FILTERING_MODE_LINEAR_MIPMAP_NEAREST = GL_LINEAR_MIPMAP_NEAREST,
		HYDROGEN_TEXTURE_FILTERING_MODE_NEAREST_MIPMAP_LINEAR = GL_NEAREST_MIPMAP_LINEAR,
		HYDROGEN_TEXTURE_FILTERING_MODE_LINEAR_MIPMAP_LINEAR = GL_LINEAR_MIPMAP_LINEAR,
	};

	struct HydrogenTextureMemoryDataInfo {
		HydrogenTexturePixelFormat Format;
		void* Data;
	};

	struct HYDROGEN_API HydrogenTextureInfo : HydrogenHandleInfo {
		HydrogenTextureInternalFormat InternalFormat;
	};

	enum HydrogenTextureTarget {
		HYDROGEN_TEXTURE_TARGET_TEXTURE_1D = GL_TEXTURE_1D,
		HYDROGEN_TEXTURE_TARGET_TEXTURE_2D = GL_TEXTURE_2D,
		HYDROGEN_TEXTURE_TARGET_TEXTURE_3D = GL_TEXTURE_3D,
		HYDROGEN_TEXTURE_TARGET_TEXTURE_CUBEMAP = GL_TEXTURE_CUBE_MAP,
	};

	class HYDROGEN_API HydrogenTexture : public HydrogenHandle {
	protected:
		void PixelFormat(HydrogenTexturePixelFormat format, unsigned int* texFormat, unsigned int* type, unsigned int* channels = nullptr);
		void CreateEmptyFormat(HydrogenTextureInternalFormat internalFormat, unsigned int* texFormat, unsigned int* type);
	public:
		void FilteringMode(HydrogenTextureFilteringMode min, HydrogenTextureFilteringMode mag) = delete;
		void SwizzleMasks(unsigned int* params) = delete;
		void CreateIdentifier(void);
		void DeleteIdentifier(void);
		void SetIdentifier(unsigned int id) = delete; 
		void Bind(void) = delete;
		static void Unbind(void) = delete;
	};

}
 
#endif